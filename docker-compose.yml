services:
  # The Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - poetry_venv:/app/.venv
    env_file:
      - .env
    environment:
      PYTHONPATH: /app/agent-core/src:/app/agent-engine/src:/app/agent-sim/src:/app/agent-concurrent/src:/app/agent-persist/src
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      mlflow:
        condition: service_healthy
    command: tail -f /dev/null

  # The Worker Service
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: poetry run agentsim start-worker -Q "experiments,simulations" -c 4
    env_file:
      - .env
    volumes:
      - .:/app
      - poetry_venv:/app/.venv
    environment:
      PYTHONPATH: /app:/app/agent-core/src:/app/agent-engine/src:/app/agent-sim/src:/app/agent-concurrent/src:/app/agent-persist/src
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      mlflow:
        condition: service_healthy
    restart: unless-stopped

  # The PostgreSQL Database Service
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # The Redis Service
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # The MLflow Service
  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.14.1
    ports:
      - "5001:5000"
    volumes:
      - ./mlruns:/mlruns
    env_file:
      - .env
    environment:
      - MLFLOW_AUTH_CONFIG_PATH=/auth_config.ini
    command:
      - bash
      - -c
      - |
        # Install curl and PostgreSQL driver for auth database
        apt-get update && apt-get install -y curl libpq-dev &&
        pip install psycopg2-binary &&
        
        # Create auth config with PostgreSQL connection
        cat > /auth_config.ini << EOF
        [mlflow]
        admin_username = admin
        admin_password = password
        default_permission = READ
        database_uri = postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
        EOF
        
        # Start MLflow with authentication
        exec mlflow server \
          --host 0.0.0.0 \
          --port 5000 \
          --backend-store-uri file:///mlruns \
          --app-name basic-auth
    healthcheck:
      test: ["CMD", "curl", "-f", "-u", "admin:password", "http://localhost:5000/"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 45s
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  poetry_venv: