[tool.poetry]
name = "arla"
version = "0.1.0"
description = "A modular, scalable framework for running multi-agent simulations with affective reflective learning."
authors = ["Your Name <your@email.com>"]
readme = "README.md"
# The 'requires-python' key that was here has been removed.
homepage = "https://github.com/renbytes/arla"
repository = "https://github.com/renbytes/arla"
documentation = "https://github.com/renbytes/arla"

[[tool.poetry.packages]]
include = "agent_sim"
from = "agent-sim/src"

[[tool.poetry.packages]]
include = "agent_core"
from = "agent-core/src"

[[tool.poetry.packages]]
include = "agent_engine"
from = "agent-engine/src"

[[tool.poetry.packages]]
include = "agent_persist"
from = "agent-persist/src"

[[tool.poetry.packages]]
include = "agent_concurrent"
from = "agent-concurrent/src"

[tool.poetry.scripts]
arla = "agent_sim.main:app"

[tool.poetry.dependencies]
python = "==3.11.9"
# Local Packages (installed in editable/develop mode)
agent-core = { path = "agent-core", develop = true }
agent-engine = { path = "agent-engine", develop = true }
agent-concurrent = { path = "agent-concurrent", develop = true }
agent-persist = { path = "agent-persist", develop = true }
agent-sim = { path = "agent-sim", develop = true }
# Third Party Packages
celery = { extras = ["redis"], version = "==5.3.4" }
redis = ">=4.3.0"
hydra-core = ">=1.3.2"
omegaconf = ">=2.3.0"
sqlalchemy = ">=2.0.0"
greenlet = "*"
alembic = ">=1.8.0"
asyncpg = "*"
psycopg2-binary = ">=2.9.0"
pydantic = ">=2.0.0"
pandas = ">=1.4.0"
numpy = ">=1.21.0"
scipy = ">=1.8.0"
scikit-learn = ">=1.1.0"
torch = "*"
matplotlib = ">=3.5.0"
seaborn = "*"
networkx = "*"
openai = "*"
python-dotenv = ">=0.19.0"
imageio = ">=2.19.0"
uvicorn = ">=0.18.0"
fastapi = ">=0.85.0"
mlflow = "*"
dowhy = "*"
pygraphviz = "*"
rich = "*"
typer = "*"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-mock = "*"
pytest-asyncio = "*"
ruff = "==0.12.3"
mypy = "==1.16.1"
pytest-cov = "*"
coverage = { extras = ["toml"], version = "*" }
pre-commit = "*"
flower = ">=2.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [".git", "__pycache__", ".venv", "venv/", ".pytest_cache/", "notebooks/"]
line-length = 120

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "C90", "B"]
ignore = ["B905"]

[tool.ruff.lint.per-file-ignores]
"tests/" = ["N806"]

[tool.ruff.format]

[tool.mypy]
exclude = ["tests/"]
python_version = "3.11.9"
disallow_untyped_defs = true
ignore_missing_imports = true
mypy_path = ["agent-core/src", "agent-engine/src", "agent-concurrent/src", "agent-persist/src", "agent-sim/src"]
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = [
    "numpy.*", "sklearn.*", "matplotlib.*", "seaborn.*", "networkx.*",
    "omegaconf.*", "openai.*", "python_dotenv.*", "pandas.*", "scipy.*",
    "imageio.*", "dowhy.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
pythonpath = [
  "agent-core/src", "agent-engine/src", "agent-concurrent/src",
  "agent-persist/src", "agent-sim/src", "simulations",
]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = "--tb=short -v"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.0"
mkdocs-material = "^9.5.0"
mkdocs-autorefs = "^1.0.1"
mkdocstrings = "^0.25.0"
mkdocstrings-python = "^1.10.0"
